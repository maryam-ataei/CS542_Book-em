DROP TABLE "MATAEIKACHOOEI"."ADMIN" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."USERS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."MANAGE" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."EVENTCREATOR" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."MOVIE_CREATE" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."HAVEECHISTORY" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."MOVIEHALL" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."HAVE_MOVIESEAT" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."BESHOWNIN" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."MOVIE_AREIN" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."CLIENT" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."RECOMMEND" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."RATE" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."HAVECLIENTHISTORY" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."SELECTEDITEMS" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."GOFOR_TRANSACTION" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."TRANSACTIONCONFIRM" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."CREATETICKET" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."CANCLETICKET" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."TICKETKEPTIN" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."UPDATECANCLEDMOVIE" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."REDEEM" CASCADE CONSTRAINTS PURGE;
DROP TABLE "MATAEIKACHOOEI"."CLIENT" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."CINEMA" CASCADE CONSTRAINTS PURGE; 
DROP TABLE "MATAEIKACHOOEI"."MOVIETIMESHOW" CASCADE CONSTRAINTS PURGE; 

CREATE TABLE Admin (
AID VARCHAR(15),
AName VARCHAR(15),
AEmail VARCHAR(25),
Apassword VARCHAR(25),
APhoneNum VARCHAR(15),
PRIMARY KEY (AID)
);

CREATE TABLE Users (
USSN VARCHAR(15),
UName VARCHAR(15),
UEmail VARCHAR(25),
UPhoneNum VARCHAR(15),
UAddr VARCHAR(25),
UPassword VARCHAR(10),
UGender VARCHAR(10),
UDoB DATE,
PRIMARY KEY (USSN)
);

CREATE TABLE Adds (
AID VARCHAR(15) NOT NULL,
CinemaID VARCHAR(15),
PRIMARY KEY (AID, CinemaID),
FOREIGN KEY (AID) REFERENCES Admin (AID),
FOREIGN KEY (CinemaID) REFERENCES Cinema (CinemaID)
);

CREATE TABLE EventCreator (
ECID VARCHAR(15),
PRIMARY KEY (ECID),
FOREIGN KEY (ECID) REFERENCES Users (USSN)
);

CREATE TABLE Movie_Create (
ECID VARCHAR(15) NOT NULL,
MID VARCHAR(15),
Mproduction VARCHAR(100),
MReleaseDate DATE,
MEndDate DATE,
MURL VARCHAR(500),
Mname VARCHAR(50),
AgeLimit NUMBER,
Mduration VARCHAR(15),
Mdescription VARCHAR(500),
Mrating REAL,
Mprice REAL,
Mgenre VARCHAR(15),
Mlanguage VARCHAR(15),
Mformat VARCHAR(15),
TCode VARCHAR(100),
PRIMARY KEY (ECID, MID),
FOREIGN KEY (ECID) REFERENCES EventCreator (ECID)
);

CREATE TABLE HaveECHistory (
ECID VARCHAR(15) NOT NULL,
MID VARCHAR(15),
ECRating REAL,
PRIMARY KEY (ECID, MID),
FOREIGN KEY (ECID) REFERENCES EventCreator (ECID) ON DELETE CASCADE,
FOREIGN KEY (ECID, MID) REFERENCES Movie_Create (ECID, MID)
);

CREATE TABLE Cinema (
CinemaID VARCHAR(15),
CinemaAddr VARCHAR(25),
CinemaCapacity VARCHAR(25),
CinemaName VARCHAR(25),
PRIMARY KEY (CinemaID)
);

CREATE TABLE MovieTimeShow (
TimeID VARCHAR(15),
CinemaID VARCHAR(15) NOT NULL,
TimeValue TIMESTAMP,
DateID VARCHAR2(30),
DateValue DATE,
PRIMARY KEY (CinemaID, TimeID, DateID),
FOREIGN KEY (CinemaID) REFERENCES Cinema (CinemaID)
);

CREATE TABLE Have_MovieSeat (
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
MSeatNum VARCHAR2(30),
MSeatStatus VARCHAR(15),
DateID VARCHAR2(30),
PRIMARY KEY (CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (CinemaID, TimeID, DateID) REFERENCES MovieTimeShow (CinemaID, TimeID, DateID) ON DELETE CASCADE
);

CREATE TABLE BeShownIn (
MID VARCHAR(15),
ECID VARCHAR(15),
CinemaID VARCHAR(15),
MSeatNum VARCHAR2(30),
TimeID VARCHAR(15),
M_FROM TIMESTAMP,
M_TO TIMESTAMP,
DateID VARCHAR2(30),
PRIMARY KEY (MID, CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (ECID, MID) REFERENCES Movie_Create (ECID, MID),
FOREIGN KEY (CinemaID, TimeID, DateID, MSeatNum) REFERENCES Have_MovieSeat (CinemaID, TimeID, DateID, MSeatNum)
);

CREATE TABLE Movie_AreIn (
ECID VARCHAR(15) NOT NULL,
MID VARCHAR(15),
CreatedMovies VARCHAR(25),
MRating VARCHAR(15),
PRIMARY KEY (MID, ECID, CreatedMovies),
FOREIGN KEY (ECID, MID) REFERENCES Movie_Create (ECID, MID)
);

CREATE TABLE Client (
CID VARCHAR(15),
CInterest VARCHAR(25),
PRIMARY KEY (CID),
FOREIGN KEY (CID) REFERENCES Users (USSN)
);

CREATE TABLE Rate (
CID VARCHAR(15),
MID VARCHAR(15),
ECID VARCHAR(15),
UserRating INTEGER,
PRIMARY KEY (CID, MID),
FOREIGN KEY (CID) REFERENCES Client (CID),
FOREIGN KEY (ECID, MID) REFERENCES Movie_Create (ECID, MID)
);

CREATE TABLE HaveClientHistory (
CID VARCHAR(15) NOT NULL,
BookedTickets VARCHAR(255),
ClientPoints NUMBER,
PRIMARY KEY (CID),
FOREIGN KEY (CID) REFERENCES Client (CID) ON DELETE CASCADE
);

CREATE TABLE SelectedItems (
CID VARCHAR(15),
MID VARCHAR(15),
MSeatNum VARCHAR2(30),
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
DateID VARCHAR2(30),
IsActive VARCHAR(10) DEFAULT 'Y',
PRIMARY KEY (CID, MID, CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (CID) REFERENCES Client (CID),
FOREIGN KEY (MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES BeShownIn (MID, CinemaID, TimeID, DateID, MSeatNum)
);

CREATE TABLE GoFor_Transaction(
TransactionNum VARCHAR(15),
CID VARCHAR(15),
MID VARCHAR(15),
MSeatNum VARCHAR2(30),
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
PaymentDate_Time TIMESTAMP,
TransactionStatus VARCHAR(15),
DateID VARCHAR2(30),
PRIMARY KEY (TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (CID, MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES SelectedItems (CID, MID, CinemaID, TimeID, DateID, MSeatNum)
);

CREATE TABLE TransactionConfirm (
CID VARCHAR(15) NOT NULL,
TransactionNum VARCHAR(15),
MID VARCHAR(15),
MSeatNum VARCHAR2(30),
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
DateID VARCHAR2(30),
PRIMARY KEY (TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (CID) REFERENCES Client (CID),
FOREIGN KEY (TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES GoFor_Transaction (TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum)
);

CREATE TABLE CreateTicket (
TID VARCHAR(15),
CID VARCHAR(15),
MID VARCHAR(15),
MSeatNum VARCHAR2(30),
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
TransactionNum VARCHAR(15),
TicketStatus VARCHAR(10),
DateID VARCHAR2(30),
PRIMARY KEY (TID, TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES GoFor_Transaction (TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum)
);

CREATE TABLE CancleTicket(
TID VARCHAR(15),
CID VARCHAR(15) NOT NULL,
MID VARCHAR(15),
MSeatNum VARCHAR2(30),
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
TransactionNum VARCHAR(15),
DateID VARCHAR2(30),
PRIMARY KEY (TID, CID, MID, CinemaID,TimeID, DateID, MSeatNum),
FOREIGN KEY (CID) REFERENCES Client (CID),
FOREIGN KEY (TID, TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES CreateTicket (TID, TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum)
);

CREATE TABLE TicketKeptIn (
CID VARCHAR(15) NOT NULL,
TID VARCHAR(15),
MID VARCHAR(15),
MSeatNum VARCHAR2(30),
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
TransactionNum VARCHAR(15),
DateID VARCHAR2(30),
PRIMARY KEY (TID, CID, MID, CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (CID) REFERENCES Client (CID),
FOREIGN KEY (TID, TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES CreateTicket (TID, TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum)
);

CREATE TABLE UpdateCancledMovie (
TID VARCHAR(15),
CID VARCHAR(15),
MID VARCHAR(15),
MSeatNum VARCHAR2(30),
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
TransactionNum VARCHAR(15),
DateID VARCHAR2(30),
PRIMARY KEY (TID, MID, CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES BeShownIn (MID, CinemaID, TimeID, DateID, MSeatNum),
FOREIGN KEY (TID, TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES CreateTicket (TID, TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum)
);

CREATE TABLE Redeem (
CID VARCHAR(15),
RedeemAmount VARCHAR(15),
RedeemDate TIMESTAMP,
TransactionNum VARCHAR(15),
MID VARCHAR(15),
CinemaID VARCHAR(15),
TimeID VARCHAR(15),
DateID VARCHAR2(30),
MSeatNum VARCHAR2(30),
PRIMARY KEY (TransactionNum,CID),
FOREIGN KEY (CID) REFERENCES HaveClientHistory (CID),
FOREIGN KEY (TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum) REFERENCES GoFor_Transaction (TransactionNum, CID, MID, CinemaID, TimeID, DateID, MSeatNum)
);


-- to view all sequences u have created use this
SELECT sequence_name
FROM ALL_SEQUENCES;
-- to drop sequence
DROP SEQUENCE sequence_name;

-- generation of random values
CREATE SEQUENCE sequence_ussn
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE SEQUENCE sequence_movie
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE SEQUENCE sequence_cinema
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;
    
CREATE SEQUENCE sequence_timeid
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE SEQUENCE sequence_seatid
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;


-- Inserting a single record into the Admin table
INSERT INTO Admin (AID, AName, AEmail,Apassword, APhoneNum) VALUES ('A001', 'John Doe', 'johnd@gmail.com','pass123','1234567890');
INSERT INTO Admin (AID, AName, AEmail,Apassword, APhoneNum) VALUES ('A002', 'Ram Gupta', 'ramg@gmail.com','passm123', '1234867890');
INSERT INTO Admin (AID, AName, AEmail,Apassword, APhoneNum) VALUES ('A003', 'Josh William', 'joshw@gmail.com','passv123', '9134567890');
COMMIT;
